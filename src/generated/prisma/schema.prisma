generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Page {
  id           Int    @id @default(autoincrement())
  name         String
  introduction String
  avatar       String

  techs Techs[]
}

model Socials {
  id        Int      @id @default(autoincrement())
  name      String
  link      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        Int        @id @default(autoincrement())
  slug      String     @unique
  status    PostStatus @default(DRAFT)
  title     String
  body      String
  cover     String
  repo      String
  link      String
  tags      String     @default("")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  shortDescription ShortDescription[]
  techs            Techs[]
  sections         Sections[]

  authorId Int
  author   User? @relation(fields: [authorId], references: [id])
}

model Techs {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  postId Int
  post   Post? @relation(fields: [postId], references: [id])
  pageId Int
  page   Page? @relation(fields: [pageId], references: [id])
}

model Sections {
  id        Int      @id @default(autoincrement())
  title     String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  postId Int
  post   Post? @relation(fields: [postId], references: [id])
}

model ShortDescription {
  id          Int      @id @default(autoincrement())
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  postId Int
  post   Post? @relation(fields: [postId], references: [id])
}

enum PostStatus {
  DRAFT
  PUBLISHED
}

model User {
  id        Int      @id @default(autoincrement())
  status    Boolean  @default(true)
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
}
